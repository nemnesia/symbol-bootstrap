{
  "name": "@nemnesia/symbol-bootstrap",
  "description": "Symbol tool that allows you creating, configuring and running Symbol's networks",
  "version": "2.0.5",
  "author": "nemnesia <@nemnesia>",
  "type": "module",
  "bin": {
    "sb": "bin/run.js",
    "symbol-bootstrap": "bin/run.js"
  },
  "bugs": "https://github.com/nemnesia/symbol-bootstrap/issues",
  "dependencies": {
    "@inquirer/prompts": "^7.8.4",
    "@noble/ed25519": "^3.0.0",
    "@oclif/core": "^4.5.3",
    "@oclif/plugin-autocomplete": "^3.2.34",
    "@oclif/plugin-help": "^6.2.32",
    "archiver": "^7.0.1",
    "cross-fetch": "^4.1.0",
    "figlet": "^1.9.1",
    "handlebars": "^4.7.8",
    "js-yaml": "^4.1.0",
    "lodash": "^4.17.21",
    "node-stream-zip": "^1.15.0",
    "rxjs": "^7.8.2",
    "semver": "^7.7.2",
    "shx": "^0.4.0",
    "symbol-sdk": "^2.0.5",
    "symbol-statistics-service-typescript-fetch-client": "^1.1.5",
    "winston": "^3.17.0"
  },
  "devDependencies": {
    "@oclif/test": "^4.1.13",
    "@types/archiver": "^6.0.3",
    "@types/figlet": "^1.7.0",
    "@types/js-yaml": "^4.0.9",
    "@types/lodash": "^4.17.20",
    "@types/node": "^24.3.1",
    "@types/semver": "^7.7.1",
    "@types/sinon": "^17.0.4",
    "@typescript-eslint/eslint-plugin": "^8.43.0",
    "@typescript-eslint/parser": "^8.43.0",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "c8": "^10.1.3",
    "coveralls": "^3.1.1",
    "create-ts-index": "^1.14.0",
    "dir-compare": "^5.0.0",
    "eslint": "^9.35.0",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-prettier": "^5.5.4",
    "globby": "^14.1.0",
    "marked": "^16.2.1",
    "mock-stdin": "^1.0.0",
    "nock": "^14.0.10",
    "oclif": "^4.22.18",
    "prettier": "^3.6.2",
    "prettier-plugin-organize-imports": "^4.2.0",
    "sinon": "^21.0.0",
    "ts-node": "^10.9.2",
    "typedoc": "^0.28.12",
    "typescript": "^5.9.2",
    "vitest": "^3.2.4"
  },
  "engines": {
    "node": ">=18.0.0"
  },
  "files": [
    "/config",
    "/presets",
    "/bin",
    "/lib",
    "/npm-shrinkwrap.json",
    "/oclif.manifest.json"
  ],
  "homepage": "https://github.com/nemnesia/symbol-bootstrap",
  "keywords": [
    "oclif"
  ],
  "license": "Apache-2.0",
  "main": "lib/index.js",
  "oclif": {
    "bin": "symbol-bootstrap",
    "commands": "./lib/commands",
    "plugins": [
      "@oclif/plugin-autocomplete",
      "@oclif/plugin-help"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/nemnesia/symbol-bootstrap.git"
  },
  "scripts": {
    "doc": "typedoc --out \"ts-docs\" src && touch ./ts-docs/.nojekyll",
    "clean": "npx shx rm -rf ./lib tsconfig.tsbuildinfo",
    "lint": "eslint --cache src/ tests/ --ext .ts",
    "lint:fix": "eslint src/ tests/ --ext .ts --fix",
    "format": "prettier --check ./src ./tests",
    "format:fix": "prettier --write ./src ./tests",
    "style:fix": "npm run create-index-files && npm run prettier && npm run lint:fix && npm run oclif-doc",
    "create-index-files": "cti create ./src -b -n -e commands",
    "postpack": "npx shx rm -f oclif.manifest.json tsconfig.tsbuildinfo",
    "posttest": "eslint src/ tests/ --ext .ts",
    "oclif-doc": "oclif manifest && oclif readme --multi",
    "oclif-debug": "env DEBUG=* oclif manifest",
    "watch": "tsc -b -w",
    "compile": "tsc -b",
    "build": "npm run clean && npm run compile",
    "prepack": "npm run build && npm run oclif-doc",
    "pretest": "npx shx rm -rf target coverage",
    "test": "vitest run",
    "test:watch": "vitest",
    "test:ui": "vitest --ui",
    "test:coverage": "vitest run --coverage",
    "test-backup": "vitest run --reporter=verbose --timeout=900000",
    "e2e": "vitest run tests/**/*.e2e.ts --reporter=verbose --timeout=900000",
    "coveralls-report": "cat ./coverage/lcov.info | coveralls",
    "version": "echo $npm_package_version",
    "install-cli": "npm pack && npm i -g",
    "clean-network": "symbol-bootstrap clean -t target/bootstrap-test",
    "start-network": "symbol-bootstrap start -t target/bootstrap-test -u 'current'",
    "publish:prd": "npm publish --access public",
    "publish:dry": "npm publish --access public --dry-run"
  },
  "types": "lib/index.d.ts"
}
