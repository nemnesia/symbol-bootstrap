{
  "commands": {
    "checkHealth": {
      "aliases": [],
      "args": {},
      "description": "commands.healthCheck.description",
      "examples": [
        "$ symbol-bootstrap healthCheck\n$ symbol-bootstrap checkHealth"
      ],
      "flags": {
        "help": {
          "char": "h",
          "description": "flags.help.description",
          "name": "help",
          "allowNo": false,
          "type": "boolean"
        },
        "target": {
          "char": "t",
          "description": "flags.target.description",
          "name": "target",
          "default": "target",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "logger": {
          "description": "flags.logger.description|||{\"options\":\"Console,File,Silent\",\"separator\":\",\"}",
          "name": "logger",
          "default": "Console,File",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "checkHealth",
      "pluginAlias": "@nemnesia/symbol-bootstrap",
      "pluginName": "@nemnesia/symbol-bootstrap",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "checkHealth",
        "index.js"
      ]
    },
    "clean": {
      "aliases": [],
      "args": {},
      "description": "commands.clean.description",
      "examples": [
        "$ symbol-bootstrap clean"
      ],
      "flags": {
        "help": {
          "char": "h",
          "description": "flags.help.description",
          "name": "help",
          "allowNo": false,
          "type": "boolean"
        },
        "target": {
          "char": "t",
          "description": "flags.target.description",
          "name": "target",
          "default": "target",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "logger": {
          "description": "flags.logger.description|||{\"options\":\"Console,File,Silent\",\"separator\":\",\"}",
          "name": "logger",
          "default": "Console,File",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "clean",
      "pluginAlias": "@nemnesia/symbol-bootstrap",
      "pluginName": "@nemnesia/symbol-bootstrap",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "clean",
        "index.js"
      ]
    },
    "compose": {
      "aliases": [],
      "args": {},
      "description": "commands.compose.description",
      "examples": [
        "$ symbol-bootstrap compose"
      ],
      "flags": {
        "help": {
          "char": "h",
          "description": "flags.help.description",
          "name": "help",
          "allowNo": false,
          "type": "boolean"
        },
        "target": {
          "char": "t",
          "description": "flags.target.description",
          "name": "target",
          "default": "target",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "password": {
          "description": "flags.password.description",
          "name": "password",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "noPassword": {
          "description": "flags.noPassword.description",
          "name": "noPassword",
          "allowNo": false,
          "type": "boolean"
        },
        "upgrade": {
          "description": "flags.compose.upgrade.description",
          "name": "upgrade",
          "allowNo": false,
          "type": "boolean"
        },
        "offline": {
          "description": "flags.offline.description",
          "name": "offline",
          "allowNo": false,
          "type": "boolean"
        },
        "user": {
          "char": "u",
          "description": "flags.compose.user.description|||{\"currentUser\":\"current\"}",
          "name": "user",
          "default": "current",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "logger": {
          "description": "flags.logger.description|||{\"options\":\"Console,File,Silent\",\"separator\":\",\"}",
          "name": "logger",
          "default": "Console,File",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "compose",
      "pluginAlias": "@nemnesia/symbol-bootstrap",
      "pluginName": "@nemnesia/symbol-bootstrap",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "compose",
        "index.js"
      ]
    },
    "config": {
      "aliases": [],
      "args": {},
      "description": "commands.config.description",
      "examples": [
        "$ symbol-bootstrap config -p bootstrap",
        "$ symbol-bootstrap config -p testnet -a dual --password 1234",
        "$ symbol-bootstrap config -p mainnet -a peer -c custom-preset.yml",
        "$ symbol-bootstrap config -p mainnet -a my-custom-assembly.yml -c custom-preset.yml",
        "$ symbol-bootstrap config -p my-custom-network.yml -a dual -c custom-preset.yml",
        "$ echo \"$MY_ENV_VAR_PASSWORD\" | symbol-bootstrap config -p testnet -a dual"
      ],
      "flags": {
        "help": {
          "char": "h",
          "description": "flags.help.description",
          "name": "help",
          "allowNo": false,
          "type": "boolean"
        },
        "target": {
          "char": "t",
          "description": "flags.target.description",
          "name": "target",
          "default": "target",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "password": {
          "description": "flags.password.description",
          "name": "password",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "noPassword": {
          "description": "flags.noPassword.description",
          "name": "noPassword",
          "allowNo": false,
          "type": "boolean"
        },
        "preset": {
          "char": "p",
          "description": "flags.config.preset.description|||{\"preset\":\"bootstrap, testnet, mainnet\"}",
          "name": "preset",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "assembly": {
          "char": "a",
          "description": "flags.config.assembly.description|||{\"assembly\":\"dual, peer, api, demo, multinode, services\"}",
          "name": "assembly",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "customPreset": {
          "char": "c",
          "description": "flags.config.customPreset.description",
          "name": "customPreset",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "reset": {
          "char": "r",
          "description": "flags.config.reset.description",
          "name": "reset",
          "allowNo": false,
          "type": "boolean"
        },
        "upgrade": {
          "char": "u",
          "description": "flags.config.upgrade.description",
          "name": "upgrade",
          "allowNo": false,
          "type": "boolean"
        },
        "offline": {
          "description": "flags.offline.description",
          "name": "offline",
          "allowNo": false,
          "type": "boolean"
        },
        "report": {
          "description": "flags.config.report.description",
          "name": "report",
          "allowNo": false,
          "type": "boolean"
        },
        "user": {
          "char": "u",
          "description": "flags.config.user.description|||{\"currentUser\":\"current\"}",
          "name": "user",
          "default": "current",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "logger": {
          "description": "flags.logger.description|||{\"options\":\"Console,File,Silent\",\"separator\":\",\"}",
          "name": "logger",
          "default": "Console,File",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "config",
      "pluginAlias": "@nemnesia/symbol-bootstrap",
      "pluginName": "@nemnesia/symbol-bootstrap",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "config",
        "index.js"
      ]
    },
    "decrypt": {
      "aliases": [],
      "args": {},
      "description": "commands.decrypt.description",
      "examples": [
        "\n$ symbol-bootstrap start --password 1234 --preset testnet --assembly dual --customPreset decrypted-custom-preset.yml --detached\n$ symbol-bootstrap decrypt --password 1234 --source target/addresses.yml --destination plain-addresses.yml\n$ symbol-bootstrap decrypt --password 1234 --source encrypted-custom-preset.yml --destination plain-custom-preset.yml\n$ cat plain-addresses.yml\n$ cat plain-custom-preset.yml\n$ rm plain-addresses.yml\n$ rm plain-custom-preset.yml\n        ",
        "\n$ symbol-bootstrap start --preset testnet --assembly dual --customPreset decrypted-custom-preset.yml --detached\n> password prompt\n$ symbol-bootstrap decrypt --source target/addresses.yml --destination plain-addresses.yml\n> password prompt (enter the same password)\n$ symbol-bootstrap decrypt --source encrypted-custom-preset.yml --destination plain-custom-preset.yml\n> password prompt (enter the same password)\n$ cat plain-addresses.yml\n$ cat plain-custom-preset.yml\n$ rm plain-addresses.yml\n$ rm plain-custom-preset.yml",
        "\n$ echo \"$MY_ENV_VAR_PASSWORD\" | symbol-bootstrap decrypt --source target/addresses.yml --destination plain-addresses.yml\n"
      ],
      "flags": {
        "help": {
          "char": "h",
          "description": "flags.help.description",
          "name": "help",
          "allowNo": false,
          "type": "boolean"
        },
        "source": {
          "char": "s",
          "description": "flags.decrypt.source.description",
          "name": "source",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "destination": {
          "char": "d",
          "description": "flags.decrypt.destination.description",
          "name": "destination",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "password": {
          "description": "flags.decrypt.password.description",
          "name": "password",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "logger": {
          "description": "flags.logger.description|||{\"options\":\"Console,File,Silent\",\"separator\":\",\"}",
          "name": "logger",
          "default": "Console",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "decrypt",
      "pluginAlias": "@nemnesia/symbol-bootstrap",
      "pluginName": "@nemnesia/symbol-bootstrap",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "decrypt",
        "index.js"
      ]
    },
    "encrypt": {
      "aliases": [],
      "args": {},
      "description": "commands.encrypt.description",
      "examples": [
        "\n$ symbol-bootstrap encrypt --source plain-custom-preset.yml --destination encrypted-custom-preset.yml\n> password prompt\n$ symbol-bootstrap start --preset testnet --assembly dual --customPreset encrypted-custom-preset.yml\n> password prompt (enter the same password)\n        ",
        "\n$ symbol-bootstrap encrypt --password 1234 --source plain-custom-preset.yml --destination encrypted-custom-preset.yml\n$ symbol-bootstrap start --password 1234 --preset testnet --assembly dual --customPreset encrypted-custom-preset.yml\n",
        "\n $ echo \"$MY_ENV_VAR_PASSWORD\" | symbol-bootstrap encrypt --source plain-custom-preset.yml --destination encrypted-custom-preset.yml\n "
      ],
      "flags": {
        "help": {
          "char": "h",
          "description": "flags.help.description",
          "name": "help",
          "allowNo": false,
          "type": "boolean"
        },
        "source": {
          "char": "s",
          "description": "flags.encrypt.source.description",
          "name": "source",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "destination": {
          "char": "d",
          "description": "flags.encrypt.destination.description",
          "name": "destination",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "password": {
          "description": "flags.encrypt.password.description",
          "name": "password",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "logger": {
          "description": "flags.logger.description|||{\"options\":\"Console,File,Silent\",\"separator\":\",\"}",
          "name": "logger",
          "default": "Console",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "encrypt",
      "pluginAlias": "@nemnesia/symbol-bootstrap",
      "pluginName": "@nemnesia/symbol-bootstrap",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "encrypt",
        "index.js"
      ]
    },
    "healthCheck": {
      "aliases": [],
      "args": {},
      "description": "commands.healthCheck.description",
      "examples": [
        "$ symbol-bootstrap healthCheck\n$ symbol-bootstrap checkHealth"
      ],
      "flags": {
        "help": {
          "char": "h",
          "description": "flags.help.description",
          "name": "help",
          "allowNo": false,
          "type": "boolean"
        },
        "target": {
          "char": "t",
          "description": "flags.target.description",
          "name": "target",
          "default": "target",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "logger": {
          "description": "flags.logger.description|||{\"options\":\"Console,File,Silent\",\"separator\":\",\"}",
          "name": "logger",
          "default": "Console,File",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "healthCheck",
      "pluginAlias": "@nemnesia/symbol-bootstrap",
      "pluginName": "@nemnesia/symbol-bootstrap",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "healthCheck",
        "index.js"
      ]
    },
    "link": {
      "aliases": [],
      "args": {},
      "description": "commands.link.description",
      "examples": [
        "$ symbol-bootstrap link",
        "$ echo \"$MY_ENV_VAR_PASSWORD\" | symbol-bootstrap link --unlink --useKnownRestGateways"
      ],
      "flags": {
        "help": {
          "char": "h",
          "description": "flags.help.description",
          "name": "help",
          "allowNo": false,
          "type": "boolean"
        },
        "target": {
          "char": "t",
          "description": "flags.target.description",
          "name": "target",
          "default": "target",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "unlink": {
          "description": "flags.link.unlink.description",
          "name": "unlink",
          "allowNo": false,
          "type": "boolean"
        },
        "password": {
          "description": "flags.password.description",
          "name": "password",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "noPassword": {
          "description": "flags.noPassword.description",
          "name": "noPassword",
          "allowNo": false,
          "type": "boolean"
        },
        "url": {
          "char": "u",
          "description": "flags.announce.url.description",
          "name": "url",
          "default": "http://localhost:3000",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "useKnownRestGateways": {
          "description": "flags.announce.useKnownRestGateways.description",
          "name": "useKnownRestGateways",
          "allowNo": false,
          "type": "boolean"
        },
        "ready": {
          "description": "flags.announce.ready.description",
          "name": "ready",
          "allowNo": false,
          "type": "boolean"
        },
        "maxFee": {
          "description": "flags.announce.maxFee.description",
          "name": "maxFee",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "customPreset": {
          "char": "c",
          "description": "flags.announce.customPreset.description",
          "name": "customPreset",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "serviceProviderPublicKey": {
          "description": "flags.announce.serviceProviderPublicKey.description",
          "name": "serviceProviderPublicKey",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "logger": {
          "description": "flags.logger.description|||{\"options\":\"Console,File,Silent\",\"separator\":\",\"}",
          "name": "logger",
          "default": "Console",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "link",
      "pluginAlias": "@nemnesia/symbol-bootstrap",
      "pluginName": "@nemnesia/symbol-bootstrap",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "link",
        "index.js"
      ]
    },
    "modifyMultisig": {
      "aliases": [],
      "args": {},
      "description": "commands.modifyMultisig.description",
      "examples": [
        "$ symbol-bootstrap modifyMultisig",
        "$ echo \"$MY_ENV_VAR_PASSWORD\" | symbol-bootstrap modifyMultisig --useKnownRestGateways"
      ],
      "flags": {
        "help": {
          "char": "h",
          "description": "flags.help.description",
          "name": "help",
          "allowNo": false,
          "type": "boolean"
        },
        "target": {
          "char": "t",
          "description": "flags.target.description",
          "name": "target",
          "default": "target",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "minRemovalDelta": {
          "char": "r",
          "description": "flags.modifyMultisig.minRemovalDelta.description",
          "name": "minRemovalDelta",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "minApprovalDelta": {
          "char": "a",
          "description": "flags.modifyMultisig.minApprovalDelta.description",
          "name": "minApprovalDelta",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "addressAdditions": {
          "char": "A",
          "description": "flags.modifyMultisig.addressAdditions.description",
          "name": "addressAdditions",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "addressDeletions": {
          "char": "D",
          "description": "flags.modifyMultisig.addressDeletions.description",
          "name": "addressDeletions",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "password": {
          "description": "flags.password.description",
          "name": "password",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "noPassword": {
          "description": "flags.noPassword.description",
          "name": "noPassword",
          "allowNo": false,
          "type": "boolean"
        },
        "url": {
          "char": "u",
          "description": "flags.announce.url.description",
          "name": "url",
          "default": "http://localhost:3000",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "useKnownRestGateways": {
          "description": "flags.announce.useKnownRestGateways.description",
          "name": "useKnownRestGateways",
          "allowNo": false,
          "type": "boolean"
        },
        "ready": {
          "description": "flags.announce.ready.description",
          "name": "ready",
          "allowNo": false,
          "type": "boolean"
        },
        "maxFee": {
          "description": "flags.announce.maxFee.description",
          "name": "maxFee",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "customPreset": {
          "char": "c",
          "description": "flags.announce.customPreset.description",
          "name": "customPreset",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "serviceProviderPublicKey": {
          "description": "flags.announce.serviceProviderPublicKey.description",
          "name": "serviceProviderPublicKey",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "logger": {
          "description": "flags.logger.description|||{\"options\":\"Console,File,Silent\",\"separator\":\",\"}",
          "name": "logger",
          "default": "Console",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "modifyMultisig",
      "pluginAlias": "@nemnesia/symbol-bootstrap",
      "pluginName": "@nemnesia/symbol-bootstrap",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "modifyMultisig",
        "index.js"
      ]
    },
    "pack": {
      "aliases": [],
      "args": {},
      "description": "commands.pack.description",
      "examples": [
        "$ symbol-bootstrap pack",
        "$ symbol-bootstrap pack -c custom-preset.yml",
        "$ symbol-bootstrap pack -p testnet -a dual -c custom-preset.yml",
        "$ symbol-bootstrap pack -p mainnet -a dual --password 1234 -c custom-preset.yml",
        "$ echo \"$MY_ENV_VAR_PASSWORD\" | symbol-bootstrap pack -c custom-preset.yml"
      ],
      "flags": {
        "help": {
          "char": "h",
          "description": "flags.help.description",
          "name": "help",
          "allowNo": false,
          "type": "boolean"
        },
        "target": {
          "char": "t",
          "description": "flags.target.description",
          "name": "target",
          "default": "target",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "password": {
          "description": "flags.password.description",
          "name": "password",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "noPassword": {
          "description": "flags.noPassword.description",
          "name": "noPassword",
          "allowNo": false,
          "type": "boolean"
        },
        "upgrade": {
          "char": "u",
          "description": "flags.config.upgrade.description",
          "name": "upgrade",
          "allowNo": false,
          "type": "boolean"
        },
        "offline": {
          "description": "flags.offline.description",
          "name": "offline",
          "allowNo": false,
          "type": "boolean"
        },
        "user": {
          "char": "u",
          "description": "flags.config.user.description|||{\"currentUser\":\"current\"}",
          "name": "user",
          "default": "current",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "logger": {
          "description": "flags.logger.description|||{\"options\":\"Console,File,Silent\",\"separator\":\",\"}",
          "name": "logger",
          "default": "Console",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "preset": {
          "char": "p",
          "description": "flags.config.preset.description|||{\"preset\":\"bootstrap, testnet, mainnet\"}",
          "name": "preset",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "assembly": {
          "char": "a",
          "description": "flags.config.assembly.description|||{\"assembly\":\"dual, peer, api, demo, multinode, services\"}",
          "name": "assembly",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "customPreset": {
          "char": "c",
          "description": "flags.config.customPreset.description",
          "name": "customPreset",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "reset": {
          "char": "r",
          "description": "flags.config.reset.description",
          "name": "reset",
          "allowNo": false,
          "type": "boolean"
        },
        "report": {
          "description": "flags.config.report.description",
          "name": "report",
          "allowNo": false,
          "type": "boolean"
        },
        "ready": {
          "description": "flags.pack.ready.description",
          "name": "ready",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pack",
      "pluginAlias": "@nemnesia/symbol-bootstrap",
      "pluginName": "@nemnesia/symbol-bootstrap",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "pack",
        "index.js"
      ]
    },
    "renewCertificates": {
      "aliases": [],
      "args": {},
      "description": "commands.renewCertificates.description",
      "examples": [
        "$ symbol-bootstrap renewCertificates"
      ],
      "flags": {
        "help": {
          "char": "h",
          "description": "flags.help.description",
          "name": "help",
          "allowNo": false,
          "type": "boolean"
        },
        "target": {
          "char": "t",
          "description": "flags.target.description",
          "name": "target",
          "default": "target",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "password": {
          "description": "flags.password.description",
          "name": "password",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "noPassword": {
          "description": "flags.noPassword.description",
          "name": "noPassword",
          "allowNo": false,
          "type": "boolean"
        },
        "customPreset": {
          "char": "c",
          "description": "flags.renewCertificates.customPreset.description",
          "name": "customPreset",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "user": {
          "char": "u",
          "description": "flags.renewCertificates.user.description|||{\"currentUser\":\"current\"}",
          "name": "user",
          "default": "current",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "force": {
          "description": "flags.renewCertificates.force.description",
          "name": "force",
          "allowNo": false,
          "type": "boolean"
        },
        "logger": {
          "description": "flags.logger.description|||{\"options\":\"Console,File,Silent\",\"separator\":\",\"}",
          "name": "logger",
          "default": "Console,File",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "renewCertificates",
      "pluginAlias": "@nemnesia/symbol-bootstrap",
      "pluginName": "@nemnesia/symbol-bootstrap",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "renewCertificates",
        "index.js"
      ]
    },
    "report": {
      "aliases": [],
      "args": {},
      "description": "commands.report.description",
      "examples": [
        "$ symbol-bootstrap report"
      ],
      "flags": {
        "help": {
          "char": "h",
          "description": "flags.help.description",
          "name": "help",
          "allowNo": false,
          "type": "boolean"
        },
        "target": {
          "char": "t",
          "description": "flags.target.description",
          "name": "target",
          "default": "target",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "logger": {
          "description": "flags.logger.description|||{\"options\":\"Console,File,Silent\",\"separator\":\",\"}",
          "name": "logger",
          "default": "Console,File",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "report",
      "pluginAlias": "@nemnesia/symbol-bootstrap",
      "pluginName": "@nemnesia/symbol-bootstrap",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "report",
        "index.js"
      ]
    },
    "resetData": {
      "aliases": [],
      "args": {},
      "description": "commands.resetData.description",
      "examples": [
        "$ symbol-bootstrap resetData"
      ],
      "flags": {
        "help": {
          "char": "h",
          "description": "flags.help.description",
          "name": "help",
          "allowNo": false,
          "type": "boolean"
        },
        "target": {
          "char": "t",
          "description": "flags.target.description",
          "name": "target",
          "default": "target",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "logger": {
          "description": "flags.logger.description|||{\"options\":\"Console,File,Silent\",\"separator\":\",\"}",
          "name": "logger",
          "default": "Console,File",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "resetData",
      "pluginAlias": "@nemnesia/symbol-bootstrap",
      "pluginName": "@nemnesia/symbol-bootstrap",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "resetData",
        "index.js"
      ]
    },
    "run": {
      "aliases": [],
      "args": {},
      "description": "commands.run.description",
      "examples": [
        "$ symbol-bootstrap run"
      ],
      "flags": {
        "help": {
          "char": "h",
          "description": "flags.help.description",
          "name": "help",
          "allowNo": false,
          "type": "boolean"
        },
        "target": {
          "char": "t",
          "description": "flags.target.description",
          "name": "target",
          "default": "target",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "detached": {
          "char": "d",
          "description": "flags.run.detached.description",
          "name": "detached",
          "allowNo": false,
          "type": "boolean"
        },
        "healthCheck": {
          "description": "commands.healthCheck.description",
          "name": "healthCheck",
          "allowNo": false,
          "type": "boolean"
        },
        "resetData": {
          "description": "flags.run.resetData.description",
          "name": "resetData",
          "allowNo": false,
          "type": "boolean"
        },
        "pullImages": {
          "description": "flags.run.pullImages.description",
          "name": "pullImages",
          "allowNo": false,
          "type": "boolean"
        },
        "args": {
          "description": "flags.run.args.description",
          "name": "args",
          "hasDynamicHelp": false,
          "multiple": true,
          "type": "option"
        },
        "build": {
          "char": "b",
          "description": "flags.run.build.description",
          "name": "build",
          "allowNo": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "flags.run.timeout.description",
          "name": "timeout",
          "default": 60000,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "logger": {
          "description": "flags.logger.description|||{\"options\":\"Console,File,Silent\",\"separator\":\",\"}",
          "name": "logger",
          "default": "Console,File",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "run",
      "pluginAlias": "@nemnesia/symbol-bootstrap",
      "pluginName": "@nemnesia/symbol-bootstrap",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "run",
        "index.js"
      ]
    },
    "start": {
      "aliases": [],
      "args": {},
      "description": "commands.start.description",
      "examples": [
        "$ symbol-bootstrap start -p bootstrap",
        "$ symbol-bootstrap start -p testnet -a dual",
        "$ symbol-bootstrap start -p mainnet -a peer -c custom-preset.yml",
        "$ symbol-bootstrap start -p testnet -a dual --password 1234",
        "$ symbol-bootstrap start -p mainnet -a my-custom-assembly.yml -c custom-preset.yml",
        "$ symbol-bootstrap start -p my-custom-network.yml -a dual -c custom-preset.yml",
        "$ echo \"$MY_ENV_VAR_PASSWORD\" | symbol-bootstrap start -p testnet -a dual"
      ],
      "flags": {
        "help": {
          "char": "h",
          "description": "flags.help.description",
          "name": "help",
          "allowNo": false,
          "type": "boolean"
        },
        "target": {
          "char": "t",
          "description": "flags.target.description",
          "name": "target",
          "default": "target",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "password": {
          "description": "flags.password.description",
          "name": "password",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "noPassword": {
          "description": "flags.noPassword.description",
          "name": "noPassword",
          "allowNo": false,
          "type": "boolean"
        },
        "upgrade": {
          "char": "u",
          "description": "flags.config.upgrade.description",
          "name": "upgrade",
          "allowNo": false,
          "type": "boolean"
        },
        "offline": {
          "description": "flags.offline.description",
          "name": "offline",
          "allowNo": false,
          "type": "boolean"
        },
        "user": {
          "char": "u",
          "description": "flags.config.user.description|||{\"currentUser\":\"current\"}",
          "name": "user",
          "default": "current",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "logger": {
          "description": "flags.logger.description|||{\"options\":\"Console,File,Silent\",\"separator\":\",\"}",
          "name": "logger",
          "default": "Console,File",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "detached": {
          "char": "d",
          "description": "flags.run.detached.description",
          "name": "detached",
          "allowNo": false,
          "type": "boolean"
        },
        "healthCheck": {
          "description": "commands.healthCheck.description",
          "name": "healthCheck",
          "allowNo": false,
          "type": "boolean"
        },
        "resetData": {
          "description": "flags.run.resetData.description",
          "name": "resetData",
          "allowNo": false,
          "type": "boolean"
        },
        "pullImages": {
          "description": "flags.run.pullImages.description",
          "name": "pullImages",
          "allowNo": false,
          "type": "boolean"
        },
        "args": {
          "description": "flags.run.args.description",
          "name": "args",
          "hasDynamicHelp": false,
          "multiple": true,
          "type": "option"
        },
        "build": {
          "char": "b",
          "description": "flags.run.build.description",
          "name": "build",
          "allowNo": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "flags.run.timeout.description",
          "name": "timeout",
          "default": 60000,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "preset": {
          "char": "p",
          "description": "flags.config.preset.description|||{\"preset\":\"bootstrap, testnet, mainnet\"}",
          "name": "preset",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "assembly": {
          "char": "a",
          "description": "flags.config.assembly.description|||{\"assembly\":\"dual, peer, api, demo, multinode, services\"}",
          "name": "assembly",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "customPreset": {
          "char": "c",
          "description": "flags.config.customPreset.description",
          "name": "customPreset",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "reset": {
          "char": "r",
          "description": "flags.config.reset.description",
          "name": "reset",
          "allowNo": false,
          "type": "boolean"
        },
        "report": {
          "description": "flags.config.report.description",
          "name": "report",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "start",
      "pluginAlias": "@nemnesia/symbol-bootstrap",
      "pluginName": "@nemnesia/symbol-bootstrap",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "start",
        "index.js"
      ]
    },
    "stop": {
      "aliases": [],
      "args": {},
      "description": "commands.stop.description",
      "examples": [
        "$ symbol-bootstrap stop"
      ],
      "flags": {
        "help": {
          "char": "h",
          "description": "flags.help.description",
          "name": "help",
          "allowNo": false,
          "type": "boolean"
        },
        "target": {
          "char": "t",
          "description": "flags.target.description",
          "name": "target",
          "default": "target",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "logger": {
          "description": "flags.logger.description|||{\"options\":\"Console,File,Silent\",\"separator\":\",\"}",
          "name": "logger",
          "default": "Console,File",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "stop",
      "pluginAlias": "@nemnesia/symbol-bootstrap",
      "pluginName": "@nemnesia/symbol-bootstrap",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "stop",
        "index.js"
      ]
    },
    "updateVotingKeys": {
      "aliases": [],
      "args": {},
      "description": "commands.updateVotingKeys.description",
      "examples": [
        "$ symbol-bootstrap updateVotingKeys"
      ],
      "flags": {
        "help": {
          "char": "h",
          "description": "flags.help.description",
          "name": "help",
          "allowNo": false,
          "type": "boolean"
        },
        "target": {
          "char": "t",
          "description": "flags.target.description",
          "name": "target",
          "default": "target",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "user": {
          "char": "u",
          "description": "flags.updateVotingKeys.user.description|||{\"currentUser\":\"current\"}",
          "name": "user",
          "default": "current",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "finalizationEpoch": {
          "description": "flags.updateVotingKeys.finalizationEpoch.description",
          "name": "finalizationEpoch",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "logger": {
          "description": "flags.logger.description|||{\"options\":\"Console,File,Silent\",\"separator\":\",\"}",
          "name": "logger",
          "default": "Console,File",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "updateVotingKeys",
      "pluginAlias": "@nemnesia/symbol-bootstrap",
      "pluginName": "@nemnesia/symbol-bootstrap",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "updateVotingKeys",
        "index.js"
      ]
    },
    "verify": {
      "aliases": [],
      "args": {},
      "description": "commands.verify.description",
      "examples": [
        "$ symbol-bootstrap verify"
      ],
      "flags": {
        "help": {
          "char": "h",
          "description": "flags.help.description",
          "name": "help",
          "allowNo": false,
          "type": "boolean"
        },
        "logger": {
          "description": "flags.logger.description|||{\"options\":\"Console,File,Silent\",\"separator\":\",\"}",
          "name": "logger",
          "default": "Console,File",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "verify",
      "pluginAlias": "@nemnesia/symbol-bootstrap",
      "pluginName": "@nemnesia/symbol-bootstrap",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "verify",
        "index.js"
      ]
    },
    "wizard": {
      "aliases": [],
      "args": {},
      "description": "commands.wizard.description",
      "examples": [
        "$ symbol-bootstrap wizard"
      ],
      "flags": {
        "help": {
          "char": "h",
          "description": "flags.help.description",
          "name": "help",
          "allowNo": false,
          "type": "boolean"
        },
        "target": {
          "char": "t",
          "description": "flags.target.description",
          "name": "target",
          "default": "target",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "password": {
          "description": "flags.password.description",
          "name": "password",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "noPassword": {
          "description": "flags.noPassword.description",
          "name": "noPassword",
          "allowNo": false,
          "type": "boolean"
        },
        "network": {
          "description": "The node or network you want to create.",
          "name": "network",
          "hasDynamicHelp": false,
          "multiple": false,
          "options": [
            "bootstrap",
            "testnet",
            "mainnet",
            "custom"
          ],
          "type": "option"
        },
        "customPreset": {
          "char": "c",
          "description": "The custom preset to be created.",
          "name": "customPreset",
          "default": "custom-preset.yml",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "ready": {
          "description": "If --ready is provided, the command will not ask offline confirmation.",
          "name": "ready",
          "allowNo": false,
          "type": "boolean"
        },
        "logger": {
          "description": "flags.logger.description|||{\"options\":\"Console,File,Silent\",\"separator\":\",\"}",
          "name": "logger",
          "default": "Console",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "wizard",
      "pluginAlias": "@nemnesia/symbol-bootstrap",
      "pluginName": "@nemnesia/symbol-bootstrap",
      "pluginType": "core",
      "strict": true,
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "lib",
        "commands",
        "wizard",
        "index.js"
      ]
    }
  },
  "version": "2.0.6"
}